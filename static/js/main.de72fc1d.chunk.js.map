{"version":3,"sources":["components/TodoItem.js","components/Header.js","components/Footer.js","util/storage.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","this","props","item","onChange","onDeleteItem","className","classNames","isComplate","type","checked","title","onClick","Component","Header","inputEle","React","createRef","current","focus","newItem","onKeyUp","ref","value","placeholder","autoFocus","Footer","count","onClickActive","onClickComplete","onClickAll","onClearAll","filter","href","TODOS_STORAGE_KEY","JSON","parse","localStorage","getItem","todos","setItem","stringify","App","state","todoItems","storage","filters","all","active","completed","event","index","indexOf","setState","slice","keyCode","input","target","trim","splice","map","todoItemsComplete","id","onCheckedAll","length","every","htmlFor","onItemChecked","onFilterActive","onFilterComplete","onFilterAll","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.de72fc1d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass TodoItem extends Component{\r\n   \r\n    render() {\r\n        \r\n        const {item,onChange,onDeleteItem}=this.props;\r\n        \r\n        return (\r\n            <li className={classNames({'completed':item.isComplate})}>\r\n                <div className=\"view\">\r\n                    <input className=\"toggle\" type=\"Checkbox\" checked={item.isComplate} onChange={onChange}></input>\r\n                    <label>{item.title}</label>\r\n                    <button className=\"destroy\" onClick={onDeleteItem}></button>\r\n                </div>\r\n               \r\n            </li>\r\n        )\r\n    }\r\n}\r\nTodoItem.propTypes = {\r\n    items: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        isComplate: PropTypes.bool.isRequired,\r\n    }),\r\n    onChange: PropTypes.func,\r\n    onDeleteItem: PropTypes.func,\r\n}\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputEle=React.createRef();\r\n    }\r\n    //\r\n    componentDidMount(){\r\n        this.inputEle.current.focus();\r\n      }\r\n    render(){\r\n        const {newItem,onKeyUp,onChange}=this.props;\r\n        return(\r\n            <header className=\"header\">\r\n                <h1>todos</h1>\r\n                <input className=\"new-todo\" ref={this.inputEle} value={newItem} placeholder=\"What needs to be done?\" autoFocus onKeyUp={onKeyUp} \r\n                onChange={onChange}/>\r\n            </header>\r\n        )\r\n    }\r\n}\r\nHeader.propTypes={\r\n    newItem:PropTypes.string.isRequired,\r\n    onKeyUp:PropTypes.func,\r\n    onChange:PropTypes.func,\r\n}\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport classNames from 'classnames'\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n        const {count,onClickActive,onClickComplete,onClickAll,onClearAll,filter}=this.props;\r\n        return (\r\n            <footer className=\"footer\">\r\n                <span className=\"todo-count\"><strong>{count}</strong> Item Active</span>\r\n                <ul className=\"filters\">\r\n                <li>\r\n                    <a className={classNames({'selected':filter==='all' })} onClick={onClickAll} href=\"#/\">All</a>\r\n                </li>\r\n                <li>\r\n                    <a className={classNames({'selected':filter==='active' })}  href=\"#/active\" onClick={onClickActive}>Active</a>\r\n                </li>\r\n                <li>\r\n                    <a className={classNames({'selected':filter==='completed' })}  href=\"#/completed\" onClick={onClickComplete}>Completed</a>\r\n                </li>\r\n                </ul>\r\n                <button className=\"clear-completed\" onClick={onClearAll}>Clear completed</button>\r\n          </footer>\r\n        )\r\n    }\r\n}\r\nexport default Footer","const TODOS_STORAGE_KEY='TODOS'\r\nexport default{\r\n    get(){\r\n        return JSON.parse(localStorage.getItem(TODOS_STORAGE_KEY)) || [];\r\n    },\r\n    set(todos){\r\n        localStorage.setItem(TODOS_STORAGE_KEY,JSON.stringify(todos))\r\n    } \r\n}","// import logo from './logo.svg';\nimport React,{ Component} from 'react';\n\nimport TodoItem from './components/TodoItem';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport storage from './util/storage';\n\nimport './App.css';\nimport \"./public/css/base.css\"\nimport \"./public/css/index.css\"\nclass  App extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      filter:'all',\n      newItem:'',\n      todoItems:storage.get(),//Get ToDos from local storage\n    }\n    this.filters={\n      all:()=>true,\n      active:(item)=>{return !item.isComplate},\n      completed:(item)=>{return item.isComplate}\n    }\n    this.inputEle=React.createRef();\n  }\n  \n  // handle click checked item\n  onItemChecked(item){\n    return (event)=>{\n      const isComplate=item.isComplate;\n      const {todoItems}=this.state;\n      const index= todoItems.indexOf(item);\n      this.setState({\n        todoItems:[\n          ...todoItems.slice(0,index),\n          {\n            ...item,\n            'isComplate': !isComplate,\n          },\n          ...todoItems.slice(index + 1)\n        ]\n      },()=>{storage.set(this.state.todoItems)})\n    }\n  }\n   // handle add new items\n  onKeyUp(){\n    return(event)=>{\n      if(event.keyCode===13){\n        let input= event.target.value;\n        if(!input) {\n          return;\n        }\n        if(!input.trim()) {\n          return;\n        }\n        this.setState({\n          newItem:'',\n          todoItems:[\n            { title :input, isComplate:false },\n            ...this.state.todoItems\n          ]\n        },()=>{storage.set(this.state.todoItems)})\n        // event.target.blur();\n      }\n     \n    }\n  }\n  // handle change input add new item\n  onChange(){\n    return (event)=>{ \n      this.setState({\n        newItem:event.target.value\n      })\n    }\n  }\n  //handle delete item\n  onDeleteItem(item){\n    return(event)=>{\n      const {todoItems}=this.state\n      const index= todoItems.indexOf(item);\n      todoItems.splice(index,1);\n      this.setState({\n        todoItems:[\n          ...todoItems\n        ]\n      },()=>{storage.set(this.state.todoItems)})\n    }\n  }\n  //hendel check all items, isComplate on every item\n  onCheckedAll(){\n    return(event)=>{\n      const {todoItems}=this.state;\n      const isComplate= event.target.checked\n      todoItems.map((item)=>{return item.isComplate=isComplate})\n      this.setState({\n        todoItems:todoItems,\n      },()=>{storage.set(this.state.todoItems)})\n    }\n  }\n  //hendel filter item have isComplate is true\n  onFilterActive(){\n    return(event)=>{\n     this.setState({\n       filter:'active'\n     })\n    }\n  }\n  //hendel filter item have isComplate is flase\n  onFilterComplete(){\n    return(event)=>{\n     this.setState({\n       filter:'completed'\n     })\n    }\n  }\n  //hendel filter all item \n  onFilterAll(){\n    return(event)=>{\n      this.setState({\n        filter:'all'\n      })\n     }\n  }\n  //hendel clear all item is completed\n  onClearAll(){\n    return(event)=>{\n      const{todoItems}=this.state;\n      const todoItemsComplete=todoItems.filter(this.filters.active)\n      this.setState({\n        todoItems:todoItemsComplete\n      },()=>{storage.set(this.state.todoItems)})\n    }\n  }\n  render(){\n    const {newItem,filter}=this.state;\n    let {todoItems}=this.state;\n    todoItems=todoItems.filter(this.filters[filter]);\n    return(\n      <div className='App'>\n        <section className=\"todoapp\">\n          <Header newItem={newItem} onKeyUp={this.onKeyUp()} onChange={this.onChange()}></Header>\n          <section className=\"main\">\n            <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" \n            onChange={this.onCheckedAll()} \n            checked={todoItems.length>0 && todoItems.every(this.filters.completed)&& true}/>\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            <ul className=\"todo-list\">\n            {\n              todoItems.map((item,index)=>(\n              <TodoItem key={index} item={item} \n                onChange={this.onItemChecked(item)} onDeleteItem={this.onDeleteItem(item)}>\n              </TodoItem>))\n            }\n            </ul>\n          </section>\n          <Footer count={todoItems.filter(this.filters.active).length}\n                  onClickActive={this.onFilterActive()}\n                  onClickComplete={this.onFilterComplete()}\n                  onClickAll={this.onFilterAll()}\n                  onClearAll={this.onClearAll()}\n                  filter={filter}>\n          </Footer>\n        </section>\n      </div>\n    )\n  } \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}